// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.24;

// Uncomment this line to use console.log
// import "hardhat/console.sol";
import "@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol";
import "./Deposit_V1.sol";

contract Deposit_V2 is Deposit_V1, ReentrancyGuardUpgradeable {
    function __Deposit_V2_init() public reinitializer(2) {
        __ReentrancyGuard_init();
    }
    function withdraw(
        uint256 amount
    ) public virtual override whenNotPaused nonReentrant {
        require(balances[_msgSender()] >= amount, "Insufficient balance");
        balances[_msgSender()] -= amount; // updating contract state
        (bool success, ) = _msgSender().call{value: amount}(""); // transfering fund
        require(success, "Transfer failed");
    }

    function version() external pure returns (uint256) {
        return 2;
    }
}
