import report from "@/db/models/report";
import createError from "http-errors";
import { crawlReportFile } from "@/service/reports";


/**
 * POST /reports
 * Create new report
 */
export const createReport = async (req, res, next) => {
    try {
        const reportFile = req.file;
        const { description } = req.body;

        const allowedExtension = ["json"];

        //check file extension
        var filenameArr = reportFile.originalname.split(".")
        const filename = filenameArr[0];
        const fileExtension = filenameArr.pop(); // Basic, This can be improved with mime package
        if (!allowedExtension.includes(fileExtension)) {
            return next(createError("Invalid file extension"));
        }

        // check if file size is less than 15 MB
        if (reportFile.size > 15 * 1024 * 1024) {
            return next(createError("File size is too large"));
        }
        // check if file name already exists 
        const exMedia = await report.findOne({ name: reportFile.originalname })
        if (exMedia) {
            return next(createError("File name already exists"));
        }

        // save file public/reports
        const url = `/reports/${reportFile.originalname}`
        //await reportFile.mv(mediPath);
        const reportDataObj = new report({
            name: reportFile.originalname,
            extension: fileExtension,
            description: description,
            url,
            path: reportFile.path,
            size: reportFile.size,
            mimetype: reportFile.mimetype
        });
        await reportDataObj.save();
        crawlReportFile(filename, reportFile.path, reportDataObj._id);
        res.status(201).json(reportDataObj);
    } catch (error) {
        console.log(error);
        return next(createError("Report creation failed"));
    }
}

/**
 * GET /reports
 * Get all reports
 */
export const getAllReports = async (req, res, next) => {
    try {
        const reportData = await report.find();
        // include http://APP_HOST:PORT/${url}
        reportData.forEach(report => {
            report.url = `http://${req.headers.host}${report.url}`;
        });
        res.status(201).json(reportData);
    } catch (error) {
        return next(error);
    }
}

/**
 * GET /reports/:id
 * Get report by id
 */
export const getReportById = async (req, res, next) => {
    try {
        const reportData = await report.findById(req.params.id);
        // include http://APP_HOST:PORT/${url}
        reportData.url = `http://${req.headers.host}${reportData.url}`;
        if (!reportData) {
            return next(createError("Report not found"));
        }
        res.json(reportData);
    } catch (error) {
        return next(error);
    }
}

/**
 * DELETE /reports/:id
 * Delete report by id
 */
export const deleteReport = async (req, res, next) => {
    try {
        const reportData = await report.findByIdAndDelete(req.params.id);
        if (!reportData) {
            return res.status(404).json({ message: 'Report not found' });
        }
        res.json({ message: 'Report deleted successfully' });
    } catch (error) {
        return next(error);
    }
}