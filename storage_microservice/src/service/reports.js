import fs from 'fs';
import reportSummary from '@/db/models/reportSummary';
import vulnerabilities from '@/db/models/vulnerabilities';


export const crawlReportFile = async (filename, filepath, reportId) => {
    try {
        console.log(filepath);
        fs.readFile(filepath, 'utf8', async (err, data) => {
            if (err) console.error("reading report file failed");
            const jsonData = JSON.parse(data);
            if (jsonData.success) {
                const printer = jsonData.results.printers[0];
                const { description, additional_fields } = printer;
                const { number_lines, number_findings, detectors } = additional_fields;
                const { optimization_issues, informational_issues, low_issues, medium_issues, high_issues } = number_findings;
                const reportSummaryData = new reportSummary({
                    name: filename,
                    description,
                    lines: number_lines,
                    optimizationIssues: optimization_issues,
                    informationalIssues: informational_issues,
                    lowIssues: low_issues,
                    mediumIssues: medium_issues,
                    highIssues: high_issues,
                    reportId
                });
                await reportSummaryData.save();
                // loop through detector and create new vulnerabilities
                detectors.forEach(detector => {
                    const { description, check, impact, confidence, first_markdown_element, id } = detector;
                    const vulnerabilitiesData = new vulnerabilities({
                        detectorId: id,
                        description,
                        check,
                        impact,
                        confidence,
                        imapctLine: first_markdown_element,
                        reportId
                    });
                    vulnerabilitiesData.save();
                })
            } else {
                console.log("report file is not valid");

            }
        })

    } catch (error) {
        console.log(error);
    }
}